#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (C) 2019 Alvaro del Castillo
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA.
#
# Authors:
#     Alvaro del Castillo <alvaro.delcastillo@gmail.com>
#


import argparse
import logging
import sys

import dogbreed

DOGBREED_USAGE_MSG = \
    """%(prog)s [-g] [<args>] | --help | --version"""

DOGBREED_DESC_MSG = \
    """Detect dog breed using deep learning."""

DOGBREED_EPILOG_MSG = \
    """Run '%(prog)s --help' to show the help for using the program."""

DOGBREED_VERSION_MSG = \
    """%(prog)s """ + dogbreed.__version__


# Logging formats
DOGBREED_LOG_FORMAT = "[%(asctime)s] - %(message)s"
DOGBREED_DEBUG_LOG_FORMAT = "[%(asctime)s - %(name)s - %(levelname)s] - %(message)s"


def configure_logging(debug=False):
    """Configure MyDogBreed logging
    The function configures the log messages produced by MyDogBreed.
    By default, log messages are sent to stderr. Set the parameter
    `debug` to activate the debug mode.
    :param debug: set the debug mode
    """
    if not debug:
        logging.basicConfig(level=logging.INFO,
                            format=DOGBREED_LOG_FORMAT)
        logging.getLogger('requests').setLevel(logging.WARNING)
        logging.getLogger('urrlib3').setLevel(logging.WARNING)
    else:
        logging.basicConfig(level=logging.DEBUG,
                            format=DOGBREED_DEBUG_LOG_FORMAT)


def parse_args():
    """Parse command line arguments"""

    parser = argparse.ArgumentParser(usage=DOGBREED_USAGE_MSG,
                                     description=DOGBREED_DESC_MSG,
                                     epilog=DOGBREED_EPILOG_MSG,
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     add_help=False)

    parser.add_argument('-h', '--help', action='help',
                        help=argparse.SUPPRESS)
    parser.add_argument('-v', '--version', action='version',
                        version=DOGBREED_VERSION_MSG,
                        help=argparse.SUPPRESS)
    parser.add_argument('-g', '--debug', dest='debug',
                        action='store_true',
                        help=argparse.SUPPRESS)

    parser.add_argument('backend', help=argparse.SUPPRESS)
    parser.add_argument('backend_args', nargs=argparse.REMAINDER,
                        help=argparse.SUPPRESS)

    if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)

    return parser.parse_args()


def main():
    args = parse_args()

    configure_logging(args.debug)

    logging.info("Starting MyDogBreed magic.")

    # Load the image with the dog
    # Load the prediction model
    # Predict the breed and show it visually

    logging.info("Breed detection finished.")


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        s = "\n\nReceived Ctrl-C or other break signal. Exiting.\n"
        sys.stderr.write(s)
        sys.exit(0)